import java.util.*;

class Solution {
    public boolean dfs(List<List<Integer>> graph, boolean[] visited, boolean[] resStack, int start) {
        resStack[start] = true;
        visited[start] = true;
        for (int n : graph.get(start)) {
            if (resStack[n]) {
                return true;
            }
            if (!visited[n]) {
                if (dfs(graph, visited, resStack, n)) {
                    return true;
                }
            }
        }
        resStack[start] = false;
        return false;
    }

    public boolean canFinish(int numCourses, int[][] prerequisites) {
        List<List<Integer>> graph = new ArrayList<>();
        for (int i = 0; i < numCourses; i++) {
            graph.add(new ArrayList<>());
        }
        for (int[] arr : prerequisites) {
            graph.get(arr[0]).add(arr[1]);
        }

        boolean[] resStack = new boolean[numCourses];
        boolean[] visited = new boolean[numCourses];
        for (int i = 0; i < numCourses; i++) {
            if (dfs(graph, visited, resStack, i)) {
                return false;
            }
        }
        return true;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("Enter the number of courses:");
        int numCourses = scanner.nextInt();
        
        System.out.println("Enter the number of prerequisites:");
        int numPrerequisites = scanner.nextInt();
        
        int[][] prerequisites = new int[numPrerequisites][2];
        System.out.println("Enter the prerequisites (each pair in a new line):");
        for (int i = 0; i < numPrerequisites; i++) {
            prerequisites[i][0] = scanner.nextInt();
            prerequisites[i][1] = scanner.nextInt();
        }

        Solution solution = new Solution();
        boolean canFinish = solution.canFinish(numCourses, prerequisites);

        if (canFinish) {
            System.out.println("It is possible to finish all courses.");
        } else {
            System.out.println("It is not possible to finish all courses.");
        }
    }
}
